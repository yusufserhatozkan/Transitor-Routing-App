Index: src/Data/DataGetter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Data;\n\nimport Gui.PostcodeInputListener;\nimport Gui.PostcodeInputPane;\nimport Api.ApiReader;\nimport java.io.IOException;\nimport java.sql.*;\nimport java.util.*;\nimport java.util.StringJoiner;\nimport java.io.File;\n\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\npublic class DataGetter {\n\n    private static final double NORTH_BOUND = 50.870000;\n    private static final double SOUTH_BOUND = 50.800000;\n    private static final double EAST_BOUND = 5.750000;\n    private static final double WEST_BOUND = 5.650000;\n\n\n    public static void main(String[] args) throws SQLException {\n        Scanner scanner = new Scanner(System.in);\n        System.out.print(\"Enter the first postal code: \");\n        String postalCode1 = scanner.nextLine().trim();\n        System.out.print(\"Enter the second postal code: \");\n        String postalCode2 = scanner.nextLine().trim();\n\n        double[] location1 = getLocationFromApiReader(postalCode1);\n        double[] location2 = getLocationFromApiReader(postalCode2);\n\n        if (location1 != null && location2 != null) {\n            findFastestRouteInfo(location1[0], location1[1], location2[0], location2[1], 0.6, \"12:20\"); // Example radius\n        } else {\n\n            System.out.println(\"Invalid postal codes.\");\n        }\n\n        scanner.close();\n    }\n\n    public static double[] getLocationFromApiReader(String postalCode) {\n        ApiReader apiReader = new ApiReader(postalCode);\n        if (apiReader.getLatitude() != 0 && apiReader.getLongitude() != 0) {\n            return new double[]{apiReader.getLatitude(), apiReader.getLongitude()};\n        }\n        return null;\n    }\n    public static double[] getLocationFromJson(String postalCode) {\n        ObjectMapper mapper = new ObjectMapper();\n        try {\n            JsonNode root = mapper.readTree(new File(\"src/resources/localization.json\"));\n            JsonNode array = root.get(\"export_dataframe.csv\");\n            for (JsonNode node : array) {\n                String zip = node.get(\"Zip\").asText();\n                if (zip.equals(postalCode)) {\n                    double lat = node.get(\"Lat\").asDouble();\n                    double lon = node.get(\"Lon\").asDouble();\n                    return new double[]{lat, lon};\n                }\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return null;\n    }\n\n\n    public static List<Integer> busStopList(double latitude, double longitude, double radius) throws SQLException {\n        List<Integer> stops = new ArrayList<>();\n        Connection conn = DatabaseSingleton.getConnection();\n        String getDestinationStops = \"SELECT stop_id FROM stops WHERE (6371000 * acos(cos(radians(?)) * cos(radians(stop_lat)) * cos(radians(stop_lon) - radians(?)) + sin(radians(?)) * sin(radians(stop_lat)))) <= ? AND stop_lat BETWEEN ? AND ? AND stop_lon BETWEEN ? AND ?\";\n\n        try (PreparedStatement stmt = conn.prepareStatement(getDestinationStops)) {\n            stmt.setDouble(1, latitude);\n            stmt.setDouble(2, longitude);\n            stmt.setDouble(3, latitude);\n            stmt.setDouble(4, radius * 1000); // Convert radius to meters\n            stmt.setDouble(5, SOUTH_BOUND);\n            stmt.setDouble(6, NORTH_BOUND);\n            stmt.setDouble(7, WEST_BOUND);\n            stmt.setDouble(8, EAST_BOUND);\n            ResultSet resultSet = stmt.executeQuery();\n            while (resultSet.next()) {\n                String stopId = resultSet.getString(\"stop_id\").replace(\"stoparea:\", \"\");\n                stops.add(Integer.parseInt(stopId));\n            }\n        } catch (SQLException e) {\n            System.out.println(\"SQL Error: \" + e.getMessage());\n        }\n        System.out.println(\"Number of stops found: \" + stops.size());\n        return stops;\n    }\n\n    public static List<TripDetail> getTripIDs(List<Integer> departureStops, List<Integer> arrivalStops, String time) throws SQLException {\n        List<TripDetail> trips = new ArrayList<>();\n        if (departureStops.isEmpty() || arrivalStops.isEmpty()) {\n            return trips;\n        }\n\n        String getMatchingTripIDs = \"SELECT s1.trip_id, s1.stop_id as start_stop_id, s2.stop_id as end_stop_id, s1.departure_time, s2.arrival_time, \" +\n                \"MIN(time_to_sec(timediff(s2.arrival_time, s1.departure_time))) AS time_taken, \" +\n                \"ABS(time_to_sec(timediff(s1.departure_time, ?))) AS time_diff \" +\n                \"FROM stop_times s1 \" +\n                \"JOIN stop_times s2 ON s1.trip_id = s2.trip_id \" +\n                \"WHERE s1.stop_id IN (\" + joinIds(departureStops) + \") \" +\n                \"AND s2.stop_id IN (\" + joinIds(arrivalStops) + \") \" +\n                \"AND timediff(s2.arrival_time, s1.departure_time) > '00:00:00' \" +\n                \"AND s1.departure_time >= ? \" +\n                \"GROUP BY s1.trip_id, s1.stop_id, s2.stop_id, s1.departure_time, s2.arrival_time \" +\n                \"ORDER BY time_diff ASC, time_taken ASC \" +\n                \"LIMIT 1;\";\n\n        System.out.println(\"Calculating the fastest trip...\");\n\n        Connection conn = DatabaseSingleton.getConnection();\n\n        try {\n            PreparedStatement preparedStatement = conn.prepareStatement(getMatchingTripIDs);\n            preparedStatement.setString(1, time);\n            preparedStatement.setString(2, time);\n            ResultSet resultSet = preparedStatement.executeQuery();\n\n            while (resultSet.next()) {\n                trips.add(new TripDetail(\n                        resultSet.getInt(\"trip_id\"),\n                        resultSet.getInt(\"time_taken\"),\n                        resultSet.getString(\"start_stop_id\"),\n                        resultSet.getString(\"end_stop_id\"),\n                        resultSet.getString(\"departure_time\"),\n                        resultSet.getString(\"arrival_time\")\n                ));\n            }\n        } catch (SQLException e) {\n            System.out.println(\"SQL Error: \" + e.getMessage());\n        }\n        return trips;\n    }\n\n    private static String joinIds(List<Integer> ids) {\n        StringJoiner joiner = new StringJoiner(\",\");\n        for (Integer id : ids) {\n            joiner.add(id.toString());\n        }\n        return joiner.toString();\n    }\n\n    private static List<String> getIntermediateStopIds(String startStopId, String endStopId, int tripId) throws SQLException {\n        List<String> intermediateStops = new ArrayList<>();\n        Connection conn = DatabaseSingleton.getConnection();\n\n        String getIntermediateStopsQuery = \"SELECT stop_times.stop_id \" +\n                \"FROM stop_times \" +\n                \"WHERE trip_id = ? AND stop_sequence >= (SELECT stop_sequence FROM stop_times WHERE trip_id = ? AND stop_id = ?) \" +\n                \"AND stop_sequence <= (SELECT stop_sequence FROM stop_times WHERE trip_id = ? AND stop_id = ?) \" +\n                \"ORDER BY stop_sequence\";\n\n        try (PreparedStatement stmt = conn.prepareStatement(getIntermediateStopsQuery)) {\n            stmt.setInt(1, tripId); // Set trip_id\n            stmt.setInt(2, tripId); // Set trip_id again\n            stmt.setString(3, startStopId); // Set start stop_id\n            stmt.setInt(4, tripId); // Set trip_id again\n            stmt.setString(5, endStopId); // Set end stop_id\n\n            ResultSet resultSet = stmt.executeQuery();\n            while (resultSet.next()) {\n                intermediateStops.add(resultSet.getString(\"stop_id\"));\n            }\n        } catch (SQLException e) {\n            System.out.println(\"SQL Error: \" + e.getMessage());\n        }\n\n        return intermediateStops;\n    }\n\n    public static TripCoordinates findFastestRouteInfo(double departureLat, double departureLong, double arrivalLat, double arrivalLong, double radius, String time) throws SQLException {\n        long start = System.currentTimeMillis();\n        List<Integer> departureStops = busStopList(departureLat, departureLong, radius);\n        List<Integer> arrivalStops = busStopList(arrivalLat, arrivalLong, radius);\n        List<TripDetail> trips = getTripIDs(departureStops, arrivalStops, time);\n        long end = System.currentTimeMillis();\n\n        // Map to store the earliest trip for each time taken\n        Map<Integer, TripDetail> earliestTrips = new HashMap<>();\n\n        for (TripDetail trip : trips) {\n            int timeTaken = trip.getTimeTaken();\n            if (!earliestTrips.containsKey(timeTaken) || trip.getDepartureTime().compareTo(earliestTrips.get(timeTaken).getDepartureTime()) < 0) {\n                earliestTrips.put(timeTaken, trip);\n            }\n        }\n\n        if (!earliestTrips.isEmpty()) {\n            for (TripDetail trip : earliestTrips.values()) {\n                System.out.println(\"Trip ID: \" + trip.getTripId());\n                System.out.println(\"Departure Time: \" + trip.getDepartureStop());\n                System.out.println(\"Arrival Time: \" + trip.getArrivalStop());\n                System.out.println(\"Time Taken: \" + trip.getTimeTaken() / 60 + \" minutes\");\n\n                // Retrieve intermediate stop IDs\n                List<String> intermediateStopIds = getIntermediateStopIds(trip.getStartStopId(), trip.getEndStopId(), trip.getTripId());\n\n                // Retrieve and display trip coordinates and stop names\n                TripCoordinates tripCoordinates = TripCoordinates.getTripCoordinates(trip, intermediateStopIds);\n                System.out.println(\"Start Stop: \" + tripCoordinates.getStartStopName() + \" (\" + tripCoordinates.getStartStopLat() + \", \" + tripCoordinates.getStartStopLon() + \")\");\n                System.out.println(\"End Stop: \" + tripCoordinates.getEndStopName() + \" (\" + tripCoordinates.getEndStopLat() + \", \" + tripCoordinates.getEndStopLon() + \")\");\n                System.out.println(\"Intermediate Stops:\");\n                for (String[] details : tripCoordinates.getIntermediateStopDetails()) {\n                    System.out.println(details[0] + \" (\" + details[1] + \", \" + details[2] + \")\");\n                }\n                System.out.println();\n\n                tripCoordinates.setBusTripTime(trip.getTimeTaken()); // Set bus trip time in seconds\n\n                System.out.println(\"Finding fastest route info took: \" + (end - start) + \" ms\");\n                return tripCoordinates;\n            }\n        } else {\n            System.out.println(\"No direct trips found.\");\n        }\n        System.out.println(\"Finding fastest route info took: \" + (end - start) + \" ms\");\n        return null;\n    }\n\n    public void cleanData(){\n        Connection connection = DatabaseSingleton.getConnection();\n        String removeStops = \"DELETE FROM STOPS WHERE NOT (stop_lat BETWEEN 50.8150 AND 50.8700 AND stop_lon BETWEEN 5.6500 AND 5.7500)\";\n        String removeStopTimes = \"DELETE FROM stop_times WHERE stop_id NOT IN (SELECT stop_id FROM stops)\";\n        String removeTrips = \"delete from trips where (trip_id NOT IN (select trip_id from stop_times))\";\n        String removeRoutes = \"delete from routes where (route_id NOT IN (select route_id from trips))\";\n        try(PreparedStatement preparedStatement = connection.prepareStatement(removeStops)){\n            preparedStatement.executeLargeUpdate();\n            PreparedStatement preparedStatement1 = connection.prepareStatement(removeStopTimes);\n            preparedStatement1.executeLargeUpdate();\n            PreparedStatement preparedStatement2 = connection.prepareStatement(removeTrips);\n            preparedStatement2.executeLargeUpdate();\n            PreparedStatement preparedStatement3 = connection.prepareStatement(removeRoutes);\n            preparedStatement3.executeLargeUpdate();\n        }catch (Exception e){\n            System.out.println(e.getMessage());\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Data/DataGetter.java b/src/Data/DataGetter.java
--- a/src/Data/DataGetter.java	(revision 39693931656462d792f354308e3da2ad1351b8fd)
+++ b/src/Data/DataGetter.java	(date 1716653096049)
@@ -1,7 +1,5 @@
 package Data;
 
-import Gui.PostcodeInputListener;
-import Gui.PostcodeInputPane;
 import Api.ApiReader;
 import java.io.IOException;
 import java.sql.*;
@@ -31,7 +29,8 @@
         double[] location2 = getLocationFromApiReader(postalCode2);
 
         if (location1 != null && location2 != null) {
-            findFastestRouteInfo(location1[0], location1[1], location2[0], location2[1], 0.6, "12:20"); // Example radius
+            String time = null;
+            findFastestRouteInfo(location1[0], location1[1], location2[0], location2[1], 0.6, time); // Example radius
         } else {
 
             System.out.println("Invalid postal codes.");
@@ -93,23 +92,18 @@
         return stops;
     }
 
-    public static List<TripDetail> getTripIDs(List<Integer> departureStops, List<Integer> arrivalStops, String time) throws SQLException {
+    public static List<TripDetail> getTripIDs(List<Integer> departureStops, List<Integer> arrivalStops) throws SQLException {
         List<TripDetail> trips = new ArrayList<>();
         if (departureStops.isEmpty() || arrivalStops.isEmpty()) {
             return trips;
         }
 
-        String getMatchingTripIDs = "SELECT s1.trip_id, s1.stop_id as start_stop_id, s2.stop_id as end_stop_id, s1.departure_time, s2.arrival_time, " +
-                "MIN(time_to_sec(timediff(s2.arrival_time, s1.departure_time))) AS time_taken, " +
-                "ABS(time_to_sec(timediff(s1.departure_time, ?))) AS time_diff " +
+        String getMatchingTripIDs = "SELECT s1.trip_id, s1.stop_id as start_stop_id, s2.stop_id as end_stop_id, s1.departure_time, s2.arrival_time, MIN(time_to_sec(timediff(s2.arrival_time, s1.departure_time))) AS time_taken " +
                 "FROM stop_times s1 " +
                 "JOIN stop_times s2 ON s1.trip_id = s2.trip_id " +
-                "WHERE s1.stop_id IN (" + joinIds(departureStops) + ") " +
-                "AND s2.stop_id IN (" + joinIds(arrivalStops) + ") " +
-                "AND timediff(s2.arrival_time, s1.departure_time) > '00:00:00' " +
-                "AND s1.departure_time >= ? " +
+                "WHERE s1.stop_id IN (" + joinIds(departureStops) + ") AND s2.stop_id IN (" + joinIds(arrivalStops) + ") AND timediff(s2.arrival_time, s1.departure_time) > '00:00:00' " +
                 "GROUP BY s1.trip_id, s1.stop_id, s2.stop_id, s1.departure_time, s2.arrival_time " +
-                "ORDER BY time_diff ASC, time_taken ASC " +
+                "ORDER BY time_taken ASC " +
                 "LIMIT 1;";
 
         System.out.println("Calculating the fastest trip...");
@@ -118,8 +112,6 @@
 
         try {
             PreparedStatement preparedStatement = conn.prepareStatement(getMatchingTripIDs);
-            preparedStatement.setString(1, time);
-            preparedStatement.setString(2, time);
             ResultSet resultSet = preparedStatement.executeQuery();
 
             while (resultSet.next()) {
@@ -178,7 +170,7 @@
         long start = System.currentTimeMillis();
         List<Integer> departureStops = busStopList(departureLat, departureLong, radius);
         List<Integer> arrivalStops = busStopList(arrivalLat, arrivalLong, radius);
-        List<TripDetail> trips = getTripIDs(departureStops, arrivalStops, time);
+        List<TripDetail> trips = getTripIDs(departureStops, arrivalStops);
         long end = System.currentTimeMillis();
 
         // Map to store the earliest trip for each time taken
@@ -222,7 +214,6 @@
         System.out.println("Finding fastest route info took: " + (end - start) + " ms");
         return null;
     }
-
     public void cleanData(){
         Connection connection = DatabaseSingleton.getConnection();
         String removeStops = "DELETE FROM STOPS WHERE NOT (stop_lat BETWEEN 50.8150 AND 50.8700 AND stop_lon BETWEEN 5.6500 AND 5.7500)";
Index: src/Data/DatabaseSingleton.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Data;\n\nimport java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.SQLException;\n\npublic class DatabaseSingleton {\n    private static Connection connection = null;\n\n    private DatabaseSingleton() { }\n\n    public static Connection getConnection() {\n        if (connection == null) {\n            try {\n                connection = DriverManager.getConnection(\n                    \"jdbc:mysql://localhost:3306/bcs7?useSSL=false&allowPublicKeyRetrieval=true\", \n                    \"root\", \n                    \"Jatzunk91\");\n            } catch (SQLException e) {\n                System.out.println(\"Error connecting to the database: \" + e.getMessage());\n                return null;\n            }\n        }\n        return connection;\n    }\n\n    public static void closeConnection() {\n        if (connection != null) {\n            try {\n                connection.close();\n            } catch (SQLException e) {\n                System.out.println(\"Error closing the database connection: \" + e.getMessage());\n            }\n            connection = null;\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Data/DatabaseSingleton.java b/src/Data/DatabaseSingleton.java
--- a/src/Data/DatabaseSingleton.java	(revision 39693931656462d792f354308e3da2ad1351b8fd)
+++ b/src/Data/DatabaseSingleton.java	(date 1716653121989)
@@ -15,7 +15,7 @@
                 connection = DriverManager.getConnection(
                     "jdbc:mysql://localhost:3306/bcs7?useSSL=false&allowPublicKeyRetrieval=true", 
                     "root", 
-                    "Jatzunk91");
+                    "pocoloski99");
             } catch (SQLException e) {
                 System.out.println("Error connecting to the database: " + e.getMessage());
                 return null;
@@ -23,15 +23,4 @@
         }
         return connection;
     }
-
-    public static void closeConnection() {
-        if (connection != null) {
-            try {
-                connection.close();
-            } catch (SQLException e) {
-                System.out.println("Error closing the database connection: " + e.getMessage());
-            }
-            connection = null;
-        }
-    }
 }
\ No newline at end of file
Index: src/Data/TripCoordinates.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Data;\n\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class TripCoordinates {\n    private final String startStopName;\n    private final double startStopLat;\n    private final double startStopLon;\n    private final String endStopName;\n    private final double endStopLat;\n    private final double endStopLon;\n    private final List<String[]> intermediateStopDetails;\n    private int busTripTime; // Add this field to store bus trip time\n    private final String departureTime;\n\n    public TripCoordinates(String startStopName, double startStopLat, double startStopLon, String endStopName, double endStopLat, double endStopLon, List<String[]> intermediateStopDetails, String departureTime) {\n        this.startStopName = startStopName;\n        this.startStopLat = startStopLat;\n        this.startStopLon = startStopLon;\n        this.endStopName = endStopName;\n        this.endStopLat = endStopLat;\n        this.endStopLon = endStopLon;\n        this.intermediateStopDetails = intermediateStopDetails;\n        this.departureTime = departureTime;\n    }\n\n    // Getters for coordinates and names\n    public String getStartStopName() {\n        return startStopName;\n    }\n\n    public double getStartStopLat() {\n        return startStopLat;\n    }\n\n    public double getStartStopLon() {\n        return startStopLon;\n    }\n\n    public String getEndStopName() {\n        return endStopName;\n    }\n\n    public double getEndStopLat() {\n        return endStopLat;\n    }\n\n    public double getEndStopLon() {\n        return endStopLon;\n    }\n\n    public List<String[]> getIntermediateStopDetails() {\n        return intermediateStopDetails;\n    }\n\n    public int getBusTripTime() {\n        return busTripTime;\n    }\n\n    public void setBusTripTime(int busTripTime) {\n        this.busTripTime = busTripTime;\n    }\n\n    public String getDepartureTime() {\n        return departureTime;\n    }\n\n    // Method to get stop coordinates and name by stop ID\n    public static String[] getStopDetailsById(String stopId) throws SQLException {\n        Connection conn = DatabaseSingleton.getConnection();\n        String[] details = null;\n        String getStopDetailsQuery = \"SELECT stop_name, stop_lat, stop_lon FROM stops WHERE stop_id = ?\";\n        try {\n            assert conn != null;\n            try (PreparedStatement stmt = conn.prepareStatement(getStopDetailsQuery)) {\n                stmt.setString(1, stopId);\n                ResultSet resultSet = stmt.executeQuery();\n                if (resultSet.next()) {\n                    String name = resultSet.getString(\"stop_name\");\n                    double lat = resultSet.getDouble(\"stop_lat\");\n                    double lon = resultSet.getDouble(\"stop_lon\");\n                    details = new String[]{name, Double.toString(lat), Double.toString(lon)};\n                }\n            }\n        } catch (SQLException e) {\n            System.out.println(\"SQL Error: \" + e.getMessage());\n        }\n        return details;\n    }\n\n    // Method to retrieve trip coordinates and stop names based on trip details\n    public static TripCoordinates getTripCoordinates(TripDetail trip, List<String> intermediateStops) throws SQLException {\n        // Retrieve coordinates and names\n        String[] startStopDetails = getStopDetailsById(trip.getStartStopId());\n        String[] endStopDetails = getStopDetailsById(trip.getEndStopId());\n        List<String[]> intermediateStopDetails = new ArrayList<>();\n        for (String stopId : intermediateStops) {\n            intermediateStopDetails.add(getStopDetailsById(stopId));\n        }\n\n        return new TripCoordinates(\n                startStopDetails[0], Double.parseDouble(startStopDetails[1]), Double.parseDouble(startStopDetails[2]),\n                endStopDetails[0], Double.parseDouble(endStopDetails[1]), Double.parseDouble(endStopDetails[2]),\n                intermediateStopDetails, trip.getDepartureStop()\n        );\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Data/TripCoordinates.java b/src/Data/TripCoordinates.java
--- a/src/Data/TripCoordinates.java	(revision 39693931656462d792f354308e3da2ad1351b8fd)
+++ b/src/Data/TripCoordinates.java	(date 1716652964664)
@@ -71,7 +71,7 @@
     }
 
     // Method to get stop coordinates and name by stop ID
-    public static String[] getStopDetailsById(String stopId) throws SQLException {
+    public static String[] getStopDetailsById(String stopId) {
         Connection conn = DatabaseSingleton.getConnection();
         String[] details = null;
         String getStopDetailsQuery = "SELECT stop_name, stop_lat, stop_lon FROM stops WHERE stop_id = ?";
Index: src/Gui/MapLoader.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Gui;\n\nimport javafx.scene.layout.Pane;\nimport javafx.scene.web.WebEngine;\nimport javafx.scene.web.WebView;\n\npublic class MapLoader extends Pane {\n    private WebView webView = new WebView();\n    private WebEngine webEngine = webView.getEngine();\n    private String htmlContent;\n\n    public MapLoader() {\n        loadMap();\n        getChildren().add(webView);\n    }\n\n    private void loadMap() {\n        htmlContent = \"\"\"\n            <!DOCTYPE html>\n            <html>\n            <head>\n                <meta charset=\"utf-8\">\n                <title>Custom Map Markers</title>\n                <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no'>\n                <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/leaflet.css\" />\n                <style>\n                    body, html { height: 100%; margin: 0; }\n                    #map { height: 100%; width: 100%; }\n                    .custom-marker {\n                        background-color: #f00;\n                        border-radius: 50%;\n                        display: block;\n                        width: 10px;\n                        height: 10px;\n                    }\n                    .leaflet-popup-content-wrapper {\n                        border-radius: 8px;\n                        box-shadow: 0 2px 10px rgba(0,0,0,0.3);\n                    }\n                </style>\n            </head>\n            <body>\n                <div id='map'></div>\n                <script src='https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/leaflet.js'></script>\n                <script>\n                    var map = L.map('map').setView([50.8516, 5.6915], 12);\n                    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n                        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n                        maxZoom: 30\n                    }).addTo(map);\n\n                    var markers = [];\n\n                    // Custom marker\n                    window.addMarker = function(lat, lng, name, color) {\n                        console.log(\"JavaScript: Adding marker at (\" + lat + \", \" + lng + \")\");\n                        var customIcon = L.divIcon({\n                            className: 'custom-marker',\n                            html: '<div style=\"background-color:' + color + '; width: 10px; height: 10px; border-radius: 50%;\"></div>',\n                            iconSize: [10, 10]\n                        });\n                        var marker = L.marker([lat, lng], {icon: customIcon}).addTo(map)\n                            .bindPopup(name).on('click', function(e) {\n                                this.openPopup();\n                            });\n                        markers.push(marker);\n                    };\n\n                    // Line between two points\n                    window.drawLine = function(originLat, originLng, destinationLat, destinationLng, color, dashed) {\n                        console.log(\"JavaScript: Drawing line from (\" + originLat + \", \" + originLng + \") to (\" + destinationLat + \", \" + destinationLng + \")\");\n                        var pointA = L.latLng(originLat, originLng);\n                        var pointB = L.latLng(destinationLat, destinationLng);\n                        var pointsList = [pointA, pointB];\n                        var lineOptions = {\n                            color: color,\n                            weight: 3,\n                            opacity: 0.7,\n                            smoothFactor: 1,\n                            dashArray: dashed ? '5, 5' : null\n                        };\n                        var polyline = L.polyline(pointsList, lineOptions).addTo(map);\n                    };\n\n                    // Clear map\n                    window.clearMap = function() {\n                        console.log(\"JavaScript: Clearing map\");\n                        map.eachLayer(function (layer) {\n                            if (layer instanceof L.Marker || layer instanceof L.Polyline) {\n                                map.removeLayer(layer);\n                            }\n                        });\n                        markers = [];\n                    };\n                </script>\n            </body>\n            </html>\n        \"\"\";\n        webEngine.loadContent(htmlContent);\n\n        // Ensure content is loaded before executing scripts\n        webEngine.getLoadWorker().stateProperty().addListener((observable, oldValue, newValue) -> {\n            if (newValue == javafx.concurrent.Worker.State.SUCCEEDED) {\n                System.out.println(\"Map content loaded\");\n            } else {\n                System.out.println(\"Map content not loaded: \" + newValue);\n            }\n        });\n    }\n\n    public void addMapMarker(double latitude, double longitude, String name, String color) {\n        String formattedLat = String.format(\"%.6f\", latitude).replace(',', '.');\n        String formattedLon = String.format(\"%.6f\", longitude).replace(',', '.');\n        System.out.printf(\"Adding marker at: (%s, %s) with name: %s and color: %s%n\", formattedLat, formattedLon, name, color);\n        String script = String.format(\n                \"if (typeof window.addMarker === 'function') { window.addMarker(%s, %s, '%s', '%s'); } else { console.log('addMarker function not defined yet.'); }\",\n                formattedLat, formattedLon, name, color);\n        webEngine.executeScript(script);\n    }\n\n    public void drawLine(double originLat, double originLng, double destinationLat, double destinationLng, String color, boolean dashed) {\n        String formattedOriginLat = String.format(\"%.6f\", originLat).replace(',', '.');\n        String formattedOriginLng = String.format(\"%.6f\", originLng).replace(',', '.');\n        String formattedDestinationLat = String.format(\"%.6f\", destinationLat).replace(',', '.');\n        String formattedDestinationLng = String.format(\"%.6f\", destinationLng).replace(',', '.');\n        System.out.printf(\"Drawing line from (%s, %s) to (%s, %s)%n\", formattedOriginLat, formattedOriginLng, formattedDestinationLat, formattedDestinationLng);\n        String script = String.format(\n                \"if (window.drawLine) { window.drawLine(%s, %s, %s, %s, '%s', %s); } else { console.log('drawLine function not defined yet.'); }\",\n                formattedOriginLat, formattedOriginLng, formattedDestinationLat, formattedDestinationLng, color, dashed);\n        webEngine.executeScript(script);\n    }\n\n    public void clearMap() {\n        System.out.println(\"Clearing map\");\n        webEngine.executeScript(\"if (window.clearMap) { window.clearMap(); } else { console.log('clearMap function not defined yet.'); }\");\n    }\n\n    public void setCenter(double lat, double lon, int zoomLevel) {\n        String formattedLat = String.format(\"%.6f\", lat).replace(',', '.');\n        String formattedLon = String.format(\"%.6f\", lon).replace(',', '.');\n        String script = String.format(\n                \"map.setView([%s, %s], %d);\",\n                formattedLat, formattedLon, zoomLevel);\n        webEngine.executeScript(script);\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Gui/MapLoader.java b/src/Gui/MapLoader.java
--- a/src/Gui/MapLoader.java	(revision 39693931656462d792f354308e3da2ad1351b8fd)
+++ b/src/Gui/MapLoader.java	(date 1716652964667)
@@ -46,7 +46,7 @@
                     var map = L.map('map').setView([50.8516, 5.6915], 12);
                     L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                         attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
-                        maxZoom: 30
+                        maxZoom: 18
                     }).addTo(map);
 
                     var markers = [];
Index: src/Gui/mapGUI.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Gui;\n\nimport Algorithm.Distance.DistanceCalculator;\nimport Data.DataGetter;\nimport Data.TripCoordinates;\nimport javafx.application.Application;\nimport javafx.application.Platform;\nimport javafx.geometry.Insets;\nimport javafx.geometry.Pos;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Button;\nimport javafx.scene.control.Label;\nimport javafx.scene.control.Slider;\nimport javafx.scene.layout.BorderPane;\nimport javafx.scene.layout.VBox;\nimport javafx.stage.Stage;\n\nimport java.sql.SQLException;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.logging.Logger;\n\npublic class mapGUI extends Application implements PostcodeInputListener {\n    private static final Logger logger = Logger.getLogger(mapGUI.class.getName());\n    private final PostcodeInputPane locationInput = new PostcodeInputPane(this);\n    private final MapLoader mapLoader = new MapLoader();\n    private final DistanceCalculator distanceCalculator = new DistanceCalculator();\n    private double radius = 0.2; // Default radius in km\n\n    @Override\n    public void start(Stage primaryStage) throws Exception {\n        BorderPane borderPane = new BorderPane();\n        borderPane.setCenter(mapLoader);\n        VBox leftContainer = new VBox(10);\n        leftContainer.setPadding(new Insets(10));\n        leftContainer.getChildren().add(locationInput);\n        leftContainer.setAlignment(Pos.TOP_CENTER);\n        locationInput.setAlignment(Pos.CENTER);\n\n        // Add radius slider\n        Label radiusLabel = new Label(\"Radius: 200 m\");\n        Slider radiusSlider = new Slider(0.2, 2.0, 0.2);\n        radiusSlider.setShowTickMarks(true);\n        radiusSlider.setShowTickLabels(true);\n        radiusSlider.setMajorTickUnit(0.2);\n        radiusSlider.setMinorTickCount(4);\n        radiusSlider.setBlockIncrement(0.1);\n        radiusSlider.setSnapToTicks(true);\n\n        radiusSlider.valueProperty().addListener((observable, oldValue, newValue) -> {\n            radius = newValue.doubleValue();\n            radiusLabel.setText(String.format(\"Radius: %.0f m\", radius * 1000));\n        });\n\n        VBox sliderContainer = new VBox(5, radiusLabel, radiusSlider);\n        sliderContainer.setAlignment(Pos.CENTER);\n\n        leftContainer.getChildren().add(sliderContainer);\n\n        // Create a \"Calculate Distance\" button and add it to the container\n        Button calculateButton = new Button(\"Calculate Distance\");\n        calculateButton.setStyle(\"-fx-background-color: #4CAF50; -fx-text-fill: white; -fx-font-size: 14px; -fx-padding: 10px 20px;\");\n        calculateButton.setOnAction(event -> {\n            // Print the radius used\n            System.out.println(\"Radius used: \" + radius + \" km\");\n            String originPostcode = locationInput.getOriginPostcodes();\n            String destinationPostcode = locationInput.getDestinationPostcodes();\n            String selectedTime = locationInput.getSelectedTime();\n            onPostcodesEntered(originPostcode, destinationPostcode, radius, selectedTime);\n        });\n        leftContainer.getChildren().add(calculateButton);\n\n        borderPane.setLeft(leftContainer);\n\n        Scene scene = new Scene(borderPane);\n        primaryStage.setScene(scene);\n        primaryStage.setResizable(false);\n        primaryStage.show();\n    }\n\n    @Override\n    public void onPostcodesEntered(String originPostcode, String destinationPostcode, double radius, String time) {\n        this.radius = radius;\n        new Thread(() -> {\n            try {\n                double[] originCoordinates = DataGetter.getLocationFromJson(originPostcode);\n                double[] destinationCoordinates = DataGetter.getLocationFromJson(destinationPostcode);\n\n                if (originCoordinates != null && destinationCoordinates != null) {\n                    Platform.runLater(() -> {\n                        locationInput.clearError();\n                        logger.info(String.format(\"Origin Coordinates: (%.6f, %.6f)\", originCoordinates[0], originCoordinates[1]));\n                        logger.info(String.format(\"Destination Coordinates: (%.6f, %.6f)\", destinationCoordinates[0], destinationCoordinates[1]));\n                        logger.info(\"Radius used in onPostcodesEntered: \" + radius + \" km\");\n                        addMarkersAndPathToMap(originCoordinates[0], originCoordinates[1], destinationCoordinates[0], destinationCoordinates[1], radius, time);\n                    });\n                } else {\n                    Platform.runLater(() -> locationInput.displayError(\"Invalid postcodes. Please try again\"));\n                }\n            } catch (Exception e) {\n                e.printStackTrace();\n                logger.severe(\"Error retrieving coordinates: \" + e.getMessage());\n                Platform.runLater(() -> locationInput.displayError(\"Error retrieving coordinates. Please try again\"));\n            }\n        }).start();\n    }\n\n    private void addMarkersAndPathToMap(double originLat, double originLong, double destinationLat, double destinationLong, double radius, String time) {\n        new Thread(() -> {\n            try {\n                // Fetch trip coordinates and details\n                TripCoordinates tripCoordinates = DataGetter.findFastestRouteInfo(originLat, originLong, destinationLat, destinationLong, radius, time);\n\n                if (tripCoordinates != null) {\n                    // Calculate distance and travel times\n                    double distance = distanceCalculator.calculateDistance(originLat, originLong, destinationLat, destinationLong);\n                    int walkingTime = distanceCalculator.calculateWalkingTime(distance);\n                    int cyclingTime = distanceCalculator.calculateCyclingTime(distance);\n                    int busTripTime = tripCoordinates.getBusTripTime() / 60; // Convert seconds to minutes\n\n                    Platform.runLater(() -> {\n                        // Clear existing markers and paths\n                        mapLoader.clearMap();\n                        locationInput.displayInfo(\"Your bus leaves the start stop at: \" + tripCoordinates.getDepartureTime());\n                        List<double[]> routeCoordinates = new ArrayList<>();\n\n                        // Add marker for origin postcode in blue\n                        System.out.printf(\"Origin Postcode Marker: (%.6f, %.6f)%n\", originLat, originLong);\n                        mapLoader.addMapMarker(originLat, originLong, \"Origin Postcode\", \"blue\");\n                        routeCoordinates.add(new double[]{originLat, originLong});\n\n                        // Add marker for destination postcode in green\n                        System.out.printf(\"Destination Postcode Marker: (%.6f, %.6f)%n\", destinationLat, destinationLong);\n                        mapLoader.addMapMarker(destinationLat, destinationLong, \"Destination Postcode\", \"green\");\n                        routeCoordinates.add(new double[]{destinationLat, destinationLong});\n\n                        // Add start marker\n                        System.out.printf(\"Start Marker: (%.6f, %.6f)%n\", tripCoordinates.getStartStopLat(), tripCoordinates.getStartStopLon());\n                        mapLoader.addMapMarker(tripCoordinates.getStartStopLat(), tripCoordinates.getStartStopLon(), tripCoordinates.getStartStopName(), \"red\");\n                        routeCoordinates.add(new double[]{tripCoordinates.getStartStopLat(), tripCoordinates.getStartStopLon()});\n\n                        // Draw dashed line from origin postcode to start marker\n                        mapLoader.drawLine(originLat, originLong, tripCoordinates.getStartStopLat(), tripCoordinates.getStartStopLon(), \"blue\", true);\n\n                        // Add end marker\n                        System.out.printf(\"End Marker: (%.6f, %.6f)%n\", tripCoordinates.getEndStopLat(), tripCoordinates.getEndStopLon());\n                        mapLoader.addMapMarker(tripCoordinates.getEndStopLat(), tripCoordinates.getEndStopLon(), tripCoordinates.getEndStopName(), \"red\");\n                        routeCoordinates.add(new double[]{tripCoordinates.getEndStopLat(), tripCoordinates.getEndStopLon()});\n\n                        // Draw dashed line from destination postcode to end marker\n                        mapLoader.drawLine(destinationLat, destinationLong, tripCoordinates.getEndStopLat(), tripCoordinates.getEndStopLon(), \"green\", true);\n\n                        // Add intermediate markers and draw lines\n                        double previousLat = tripCoordinates.getStartStopLat();\n                        double previousLon = tripCoordinates.getStartStopLon();\n                        StringBuilder intermediateStops = new StringBuilder(\"Intermediate Stops:\\n\");\n                        for (String[] stopDetails : tripCoordinates.getIntermediateStopDetails()) {\n                            double lat = Double.parseDouble(stopDetails[1]);\n                            double lon = Double.parseDouble(stopDetails[2]);\n                            String stopName = stopDetails[0];\n                            System.out.printf(\"Intermediate Marker: (%.6f, %.6f)%n\", lat, lon);\n                            mapLoader.addMapMarker(lat, lon, stopName, \"red\");\n                            mapLoader.drawLine(previousLat, previousLon, lat, lon, \"purple\", false); // Use purple color for bus route\n                            previousLat = lat;\n                            previousLon = lon;\n                            routeCoordinates.add(new double[]{lat, lon});\n                            intermediateStops.append(stopName).append(\"\\n\");\n                        }\n\n                        // Set the center of the map to the average coordinates of the route\n                        setMapCenter(routeCoordinates);\n\n                        // Update logistics information\n                        locationInput.updateLogistics(distance, walkingTime, cyclingTime, busTripTime);\n\n                        // Update route details with only intermediate stop names\n                        locationInput.updateRouteDetails(intermediateStops.toString());\n                    });\n                } else {\n                    Platform.runLater(() -> locationInput.displayError(\"No trip found for the given coordinates.\"));\n                }\n            } catch (SQLException e) {\n                e.printStackTrace();\n                Platform.runLater(() -> locationInput.displayError(\"Database error occurred. Please try again.\"));\n            }\n        }).start();\n    }\n\n    private void setMapCenter(List<double[]> coordinates) {\n        if (coordinates.isEmpty()) {\n            return;\n        }\n        double totalLat = 0;\n        double totalLon = 0;\n        for (double[] coordinate : coordinates) {\n            totalLat += coordinate[0];\n            totalLon += coordinate[1];\n        }\n        double centerLat = totalLat / coordinates.size();\n        double centerLon = totalLon / coordinates.size();\n        Platform.runLater(() -> mapLoader.setCenter(centerLat, centerLon, 14)); // Adjust zoom level as needed\n    }\n\n    public static void main(String[] args) {\n        launch(args);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Gui/mapGUI.java b/src/Gui/mapGUI.java
--- a/src/Gui/mapGUI.java	(revision 39693931656462d792f354308e3da2ad1351b8fd)
+++ b/src/Gui/mapGUI.java	(date 1716652964671)
@@ -124,23 +124,23 @@
                         locationInput.displayInfo("Your bus leaves the start stop at: " + tripCoordinates.getDepartureTime());
                         List<double[]> routeCoordinates = new ArrayList<>();
 
-                        // Add marker for origin postcode in blue
+                        // Add marker for origin postcode in green
                         System.out.printf("Origin Postcode Marker: (%.6f, %.6f)%n", originLat, originLong);
-                        mapLoader.addMapMarker(originLat, originLong, "Origin Postcode", "blue");
+                        mapLoader.addMapMarker(originLat, originLong, "Origin Postcode", "green");
                         routeCoordinates.add(new double[]{originLat, originLong});
 
-                        // Add marker for destination postcode in green
+                        // Add marker for destination postcode in red
                         System.out.printf("Destination Postcode Marker: (%.6f, %.6f)%n", destinationLat, destinationLong);
-                        mapLoader.addMapMarker(destinationLat, destinationLong, "Destination Postcode", "green");
+                        mapLoader.addMapMarker(destinationLat, destinationLong, "Destination Postcode", "red");
                         routeCoordinates.add(new double[]{destinationLat, destinationLong});
 
                         // Add start marker
                         System.out.printf("Start Marker: (%.6f, %.6f)%n", tripCoordinates.getStartStopLat(), tripCoordinates.getStartStopLon());
-                        mapLoader.addMapMarker(tripCoordinates.getStartStopLat(), tripCoordinates.getStartStopLon(), tripCoordinates.getStartStopName(), "red");
+                        mapLoader.addMapMarker(tripCoordinates.getStartStopLat(), tripCoordinates.getStartStopLon(), tripCoordinates.getStartStopName(), "black");
                         routeCoordinates.add(new double[]{tripCoordinates.getStartStopLat(), tripCoordinates.getStartStopLon()});
 
                         // Draw dashed line from origin postcode to start marker
-                        mapLoader.drawLine(originLat, originLong, tripCoordinates.getStartStopLat(), tripCoordinates.getStartStopLon(), "blue", true);
+                        mapLoader.drawLine(originLat, originLong, tripCoordinates.getStartStopLat(), tripCoordinates.getStartStopLon(), "green", true);
 
                         // Add end marker
                         System.out.printf("End Marker: (%.6f, %.6f)%n", tripCoordinates.getEndStopLat(), tripCoordinates.getEndStopLon());
@@ -148,19 +148,19 @@
                         routeCoordinates.add(new double[]{tripCoordinates.getEndStopLat(), tripCoordinates.getEndStopLon()});
 
                         // Draw dashed line from destination postcode to end marker
-                        mapLoader.drawLine(destinationLat, destinationLong, tripCoordinates.getEndStopLat(), tripCoordinates.getEndStopLon(), "green", true);
+                        mapLoader.drawLine(destinationLat, destinationLong, tripCoordinates.getEndStopLat(), tripCoordinates.getEndStopLon(), "red", true);
 
                         // Add intermediate markers and draw lines
                         double previousLat = tripCoordinates.getStartStopLat();
                         double previousLon = tripCoordinates.getStartStopLon();
-                        StringBuilder intermediateStops = new StringBuilder("Intermediate Stops:\n");
+                        StringBuilder intermediateStops = new StringBuilder("Stops:\n");
                         for (String[] stopDetails : tripCoordinates.getIntermediateStopDetails()) {
                             double lat = Double.parseDouble(stopDetails[1]);
                             double lon = Double.parseDouble(stopDetails[2]);
                             String stopName = stopDetails[0];
                             System.out.printf("Intermediate Marker: (%.6f, %.6f)%n", lat, lon);
-                            mapLoader.addMapMarker(lat, lon, stopName, "red");
-                            mapLoader.drawLine(previousLat, previousLon, lat, lon, "purple", false); // Use purple color for bus route
+                            mapLoader.addMapMarker(lat, lon, stopName, "purple");
+                            mapLoader.drawLine(previousLat, previousLon, lat, lon, "purple", false); // Bus route line colour
                             previousLat = lat;
                             previousLon = lon;
                             routeCoordinates.add(new double[]{lat, lon});
@@ -198,7 +198,7 @@
         }
         double centerLat = totalLat / coordinates.size();
         double centerLon = totalLon / coordinates.size();
-        Platform.runLater(() -> mapLoader.setCenter(centerLat, centerLon, 14)); // Adjust zoom level as needed
+        Platform.runLater(() -> mapLoader.setCenter(centerLat, centerLon, 14));
     }
 
     public static void main(String[] args) {
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"9b700896-7dee-405c-8b3c-2e421fae2747\" name=\"Changes\" comment=\"added a time input fully functional\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/transitor/Data/DataGetter.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/transitor/Data/DataGetter.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/transitor/Data/TripCoordinates.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/transitor/Data/TripCoordinates.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/transitor/Gui/PostcodeInputPane.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/transitor/Gui/PostcodeInputPane.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/transitor/Gui/mapGUI.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/transitor/Gui/mapGUI.class\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Class\" />\n        <option value=\"Interface\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <favorite-branches>\n      <branch-storage>\n        <map>\n          <entry type=\"REMOTE\">\n            <value>\n              <list>\n                <branch-info repo=\"$PROJECT_DIR$\" source=\"origin/sqlQueryTest\" />\n              </list>\n            </value>\n          </entry>\n        </map>\n      </branch-storage>\n    </favorite-branches>\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"2169c5c5213b8cb56c44d7bb5be87703bb17fda7\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitLabMergeRequestFiltersHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPENED&quot;,\n    &quot;assignee&quot;: {\n      &quot;type&quot;: &quot;org.jetbrains.plugins.gitlab.mergerequest.ui.filters.GitLabMergeRequestsFiltersValue.MergeRequestsMemberFilterValue.MergeRequestsAssigneeFilterValue&quot;,\n      &quot;username&quot;: &quot;I6366245&quot;,\n      &quot;fullname&quot;: &quot;Pappas, Matthew (Stud. DACS)&quot;\n    }\n  }\n}</component>\n  <component name=\"GitLabMergeRequestsSettings\">{\n  &quot;selectedUrlAndAccountId&quot;: {\n    &quot;first&quot;: &quot;https://gitlab.maastrichtuniversity.nl/group7/transitor.git&quot;,\n    &quot;second&quot;: &quot;03ae2fad-d109-4f70-9d9d-687e0a74625c&quot;\n  }\n}</component>\n  <component name=\"JsBowerSettings\">\n    <bower-package value=\"\" />\n    <bower.json value=\"\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 3\n}</component>\n  <component name=\"ProjectId\" id=\"2drTimOiNSYVFBrO8m1HRx2dPgX\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;Application.DataGetter.executor&quot;: &quot;Run&quot;,\n    &quot;Application.mapGUI.executor&quot;: &quot;Run&quot;,\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;sqlQueryTest&quot;,\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/geveg/OneDrive/Desktop/schoo/transitor/lib/mysql-connector-j-8.3.0.jar&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\n    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.JavaFX&quot;,\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\n  },\n  &quot;keyToStringList&quot;: {\n    &quot;DatabaseDriversLRU&quot;: [\n      &quot;mysql&quot;\n    ]\n  }\n}</component>\n  <component name=\"Push.Settings\">\n    <force-push-targets>\n      <force-push-target remote-path=\"origin\" branch=\"sqlQueryTest\" />\n    </force-push-targets>\n  </component>\n  <component name=\"RecentsManager\">\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"C:\\Users\\geveg\\OneDrive\\Desktop\\schoo\\transitor\\lib\" />\n    </key>\n  </component>\n  <component name=\"RunManager\">\n    <configuration name=\"mapGUI\" type=\"Application\" factoryName=\"Application\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"Gui.mapGUI\" />\n      <module name=\"transitor\" />\n      <option name=\"VM_PARAMETERS\" value=\"--module-path &quot;$USER_HOME$/Downloads/javafx-sdk-21.0.1/lib&quot; --add-modules=javafx.controls,javafx.fxml,javafx.web\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"Gui.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n  </component>\n  <component name=\"SharedIndexes\">\n    <attachedChunks>\n      <set>\n        <option value=\"bundled-jdk-9f38398b9061-39b83d9b5494-intellij.indexing.shared.core-IU-241.15989.150\" />\n        <option value=\"bundled-js-predefined-1d06a55b98c1-91d5c284f522-JavaScript-IU-241.15989.150\" />\n      </set>\n    </attachedChunks>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"9b700896-7dee-405c-8b3c-2e421fae2747\" name=\"Changes\" comment=\"\" />\n      <created>1710765326754</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1710765326754</updated>\n      <workItem from=\"1710765327865\" duration=\"141000\" />\n      <workItem from=\"1713969232926\" duration=\"1349000\" />\n      <workItem from=\"1714301748126\" duration=\"6558000\" />\n      <workItem from=\"1714313432515\" duration=\"1322000\" />\n      <workItem from=\"1714322777511\" duration=\"3258000\" />\n      <workItem from=\"1714408284333\" duration=\"5047000\" />\n      <workItem from=\"1714481616041\" duration=\"6649000\" />\n      <workItem from=\"1714829284099\" duration=\"4298000\" />\n      <workItem from=\"1714845314342\" duration=\"720000\" />\n      <workItem from=\"1715856201386\" duration=\"132000\" />\n      <workItem from=\"1715856338076\" duration=\"51000\" />\n      <workItem from=\"1715856393691\" duration=\"123000\" />\n      <workItem from=\"1715856520531\" duration=\"1569000\" />\n      <workItem from=\"1715859204228\" duration=\"4873000\" />\n      <workItem from=\"1715946709390\" duration=\"702000\" />\n      <workItem from=\"1715968911362\" duration=\"433000\" />\n      <workItem from=\"1715969347981\" duration=\"1031000\" />\n      <workItem from=\"1715970384030\" duration=\"6476000\" />\n      <workItem from=\"1715976883232\" duration=\"492000\" />\n      <workItem from=\"1716291643278\" duration=\"298000\" />\n      <workItem from=\"1716291960360\" duration=\"3338000\" />\n      <workItem from=\"1716452100398\" duration=\"4745000\" />\n      <workItem from=\"1716498034612\" duration=\"87000\" />\n      <workItem from=\"1716498124997\" duration=\"58000\" />\n      <workItem from=\"1716498190206\" duration=\"5000\" />\n      <workItem from=\"1716560288897\" duration=\"4648000\" />\n      <workItem from=\"1716640469418\" duration=\"3490000\" />\n      <workItem from=\"1716650401537\" duration=\"1228000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"working on pulling from mysql\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1714311916441</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1714311916441</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"working on pulling from mysql\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1714432008878</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1714432008878</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"working on pulling from mysql\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1714496190328</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1714496190328</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"woof meow meow woof woof\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1714838161315</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1714838161315</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"woof meow meow woof woof\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1714838416980</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1714838416980</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"woof meow meow woof woof\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1714845201503</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1714845201503</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"Merge remote-tracking branch 'origin/sqlQueryTest' into sqlQueryTest&#10;&#10;# Conflicts:&#10;#&#9;.idea/workspace.xml&#10;#&#9;src/Data/DataGetter.java\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1715949130531</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1715949130532</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"DataGetter now uses new TripCoordinates class to fetch the coordinates from the bus stops result set, and prints them along with the stop name.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1715949242140</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1715949242140</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"added deletion methods for stops and stop_times\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1716294533517</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1716294533517</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"added deletion methods for trips and routes\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1716295663642</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1716295663642</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"added deletion methods for trips and routes\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1716376378804</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1716376378804</updated>\n    </task>\n    <task id=\"LOCAL-00012\" summary=\"error handling for incorrect postal code, plus working on adding departure and arrival pins as well\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1716459572296</created>\n      <option name=\"number\" value=\"00012\" />\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1716459572296</updated>\n    </task>\n    <task id=\"LOCAL-00013\" summary=\"error handling for incorrect postal code, plus working on adding departure and arrival pins as well\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1716459588841</created>\n      <option name=\"number\" value=\"00013\" />\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1716459588841</updated>\n    </task>\n    <task id=\"LOCAL-00014\" summary=\"error handling for incorrect postal code, plus working on adding departure and arrival pins as well\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1716459599183</created>\n      <option name=\"number\" value=\"00014\" />\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1716459599183</updated>\n    </task>\n    <task id=\"LOCAL-00015\" summary=\"added a time input (trying to figure out how to display it)\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1716649422144</created>\n      <option name=\"number\" value=\"00015\" />\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1716649422144</updated>\n    </task>\n    <task id=\"LOCAL-00016\" summary=\"added a time input fully functional\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1716651583213</created>\n      <option name=\"number\" value=\"00016\" />\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1716651583213</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"17\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"working on pulling from mysql\" />\n    <MESSAGE value=\"woof meow meow woof woof\" />\n    <MESSAGE value=\"Merge remote-tracking branch 'origin/sqlQueryTest' into sqlQueryTest&#10;&#10;# Conflicts:&#10;#&#9;.idea/workspace.xml&#10;#&#9;src/Data/DataGetter.java\" />\n    <MESSAGE value=\"DataGetter now uses new TripCoordinates class to fetch the coordinates from the bus stops result set, and prints them along with the stop name.\" />\n    <MESSAGE value=\"added deletion methods for stops and stop_times\" />\n    <MESSAGE value=\"added deletion methods for trips and routes\" />\n    <MESSAGE value=\"error handling for incorrect postal code, plus working on adding departure and arrival pins as well\" />\n    <MESSAGE value=\"error for no direct route added\" />\n    <MESSAGE value=\"added a time input (trying to figure out how to display it)\" />\n    <MESSAGE value=\"added a time input fully functional\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"added a time input fully functional\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <breakpoint enabled=\"true\" type=\"java-exception\">\n          <properties class=\"netscape.javascript.JSException\" package=\"netscape.javascript\" />\n          <option name=\"timeStamp\" value=\"2\" />\n        </breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\n    <expand />\n    <select />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 39693931656462d792f354308e3da2ad1351b8fd)
+++ b/.idea/workspace.xml	(date 1716652972808)
@@ -4,12 +4,22 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="9b700896-7dee-405c-8b3c-2e421fae2747" name="Changes" comment="added a time input fully functional">
+    <list default="true" id="9b700896-7dee-405c-8b3c-2e421fae2747" name="Changes" comment="error handling for incorrect postal code, plus working on adding departure and arrival pins as well">
+      <change beforePath="$PROJECT_DIR$/.idea/libraries/commons_logging_1_3_0.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_16_05_2024,_10_21_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_16_05_2024__10_21__Changes_.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_05_2024,_14_26_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_05_2024__14_26__Changes_.xml" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/transitor/Data/DataGetter.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/transitor/Data/DataGetter.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/transitor/Data/TripCoordinates.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/transitor/Data/TripCoordinates.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/transitor/Gui/PostcodeInputPane.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/transitor/Gui/PostcodeInputPane.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/transitor/Gui/MapLoader.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/transitor/Gui/MapLoader.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/out/production/transitor/Gui/mapGUI.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/transitor/Gui/mapGUI.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Data/DataGetter.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Data/DataGetter.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Data/DatabaseSingleton.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Data/DatabaseSingleton.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Gui/MapLoader.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Gui/MapLoader.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Gui/PostcodeInputPane.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Gui/PostcodeInputPane.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Gui/mapGUI.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Gui/mapGUI.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/transitor.iml" beforeDir="false" afterPath="$PROJECT_DIR$/transitor.iml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -91,10 +101,10 @@
     &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
     &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
     &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
-    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,
+    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,
     &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
     &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.JavaFX&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,
     &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   },
   &quot;keyToStringList&quot;: {
@@ -117,7 +127,7 @@
     <configuration name="mapGUI" type="Application" factoryName="Application" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="Gui.mapGUI" />
       <module name="transitor" />
-      <option name="VM_PARAMETERS" value="--module-path &quot;$USER_HOME$/Downloads/javafx-sdk-21.0.1/lib&quot; --add-modules=javafx.controls,javafx.fxml,javafx.web" />
+      <option name="VM_PARAMETERS" value="--module-path &quot;$USER_HOME$/Downloads/javafx-sdk-21.0.1/lib&quot; --add-modules=javafx.controls,javafx.fxml,javafx.web " />
       <extension name="coverage">
         <pattern>
           <option name="PATTERN" value="Gui.*" />
@@ -171,8 +181,6 @@
       <workItem from="1716498124997" duration="58000" />
       <workItem from="1716498190206" duration="5000" />
       <workItem from="1716560288897" duration="4648000" />
-      <workItem from="1716640469418" duration="3490000" />
-      <workItem from="1716650401537" duration="1228000" />
     </task>
     <task id="LOCAL-00001" summary="working on pulling from mysql">
       <option name="closed" value="true" />
@@ -286,23 +294,7 @@
       <option name="project" value="LOCAL" />
       <updated>1716459599183</updated>
     </task>
-    <task id="LOCAL-00015" summary="added a time input (trying to figure out how to display it)">
-      <option name="closed" value="true" />
-      <created>1716649422144</created>
-      <option name="number" value="00015" />
-      <option name="presentableId" value="LOCAL-00015" />
-      <option name="project" value="LOCAL" />
-      <updated>1716649422144</updated>
-    </task>
-    <task id="LOCAL-00016" summary="added a time input fully functional">
-      <option name="closed" value="true" />
-      <created>1716651583213</created>
-      <option name="number" value="00016" />
-      <option name="presentableId" value="LOCAL-00016" />
-      <option name="project" value="LOCAL" />
-      <updated>1716651583213</updated>
-    </task>
-    <option name="localTasksCounter" value="17" />
+    <option name="localTasksCounter" value="15" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -327,10 +319,7 @@
     <MESSAGE value="added deletion methods for stops and stop_times" />
     <MESSAGE value="added deletion methods for trips and routes" />
     <MESSAGE value="error handling for incorrect postal code, plus working on adding departure and arrival pins as well" />
-    <MESSAGE value="error for no direct route added" />
-    <MESSAGE value="added a time input (trying to figure out how to display it)" />
-    <MESSAGE value="added a time input fully functional" />
-    <option name="LAST_COMMIT_MESSAGE" value="added a time input fully functional" />
+    <option name="LAST_COMMIT_MESSAGE" value="error handling for incorrect postal code, plus working on adding departure and arrival pins as well" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
Index: .idea/libraries/JAR_files.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/JAR_files.xml b/.idea/libraries/JAR_files.xml
new file mode 100644
--- /dev/null	(date 1716652964676)
+++ b/.idea/libraries/JAR_files.xml	(date 1716652964676)
@@ -0,0 +1,24 @@
+<component name="libraryTable">
+  <library name="JAR files">
+    <CLASSES>
+      <root url="jar://$PROJECT_DIR$/lib/commons-logging-1.3.0.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/httpclient-4.5.14.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/httpcore-4.4.16.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/jackson-annotations-2.17.0.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/jackson-core-2.17.0.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/jackson-databind-2.17.0.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/josm-tested.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/mysql-connector-j-8.3.0.jar!/" />
+      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21.0.2/lib/javafx.web.jar!/" />
+      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21.0.2/lib/javafx-swt.jar!/" />
+      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21.0.2/lib/javafx.base.jar!/" />
+      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21.0.2/lib/javafx.controls.jar!/" />
+      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21.0.2/lib/javafx.fxml.jar!/" />
+      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21.0.2/lib/javafx.graphics.jar!/" />
+      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21.0.2/lib/javafx.media.jar!/" />
+      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21.0.2/lib/javafx.swing.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
Index: .idea/sqldialects.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/sqldialects.xml b/.idea/sqldialects.xml
new file mode 100644
--- /dev/null	(date 1716652967343)
+++ b/.idea/sqldialects.xml	(date 1716652967343)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="SqlResolveMappings">
+    <file url="file://$PROJECT_DIR$/src/Data/DataGetter.java" scope="{&quot;node&quot;:{  &quot;@negative&quot;:&quot;1&quot;,  &quot;group&quot;:{   &quot;@kind&quot;:&quot;root&quot;,   &quot;node&quot;:{    &quot;@negative&quot;:&quot;1&quot;   }  } }}" />
+  </component>
+</project>
\ No newline at end of file
